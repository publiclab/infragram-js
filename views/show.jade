extends layout
block content

  - var log = []
  - if (image.log) log = JSON.parse(image.log)
  
  script(type='text/javascript').
    mode = "#{log.length > 0 ? log[log.length-1].split('&')[0].split('=')[1] : ''}"
    params = parametersObject("#{log[log.length-1]}")
    src = "/upload/#{image.filename}"
    fetch_image(src,mode)
    save_infragrammar_expressions(params)
    if (mode == "ndvi") {
      save_infragrammar_expressions({'m':'(R-B)/(R+B)'})
      mode = "infragrammar_mono"
    } else if (mode == "nir") {
      save_infragrammar_expressions({'m':'R'})
      mode = "infragrammar_mono"
    } else if (mode == "raw") {
      save_infragrammar_expressions({'r':'R','g':'G','b':'B'})
      mode = "infragrammar"
    }
    run_infragrammar(mode)
    if (params['color'] == "true" || params['c'] == "true") run_colorize()

  div.navbar.clearfix
    div.navbar-inner
      ul.nav
        li
          a(href="/sandbox/?src=/upload/"+image.filename+"&"+log[log.length-1])
            i.icon.icon-pencil
            |  Open in Infragram Sandbox &raquo;
        li: a(onClick="$('#image').toggle();$('#original').toggle();") See original
        li
          a(onClick="downloadImage();")
            i.icon.icon-download 
            | Download image
        li
          a(href="../upload/"+image.filename)
            i.icon.icon-download 
            | Download original

  div#image-container
    canvas#image(width="800" height="600" style="width:800px; height:600px;")
    img#original(src="../upload/"+image.filename style="display:none; width:800px; height:600px;")

  div(style="display:none;")
    div#colorbar-container
      span#colorbar-min -1.00
      canvas#colorbar
      span#colorbar-max 1.00

    div(class="btn-group" data-toggle="buttons-radio")
      button#raw(type="button" class="btn active") Raw
      button#ndvi(type="button" class="btn") NDVI
      button#nir(type="button" class="btn") NIR

    select#modeSwitcher
      option(value='infragrammar') RGB
      option(value='infragrammar_hsv') HSV
      option(value='infragrammar_mono') Monochrome

    form#infragrammar(class="form-inline" action="javascript:void(0);")
      input#r_exp(placeholder="R" type="text" class="input-small")
      input#g_exp(placeholder="G" type="text" class="input-small")
      input#b_exp(placeholder="B" type="text" class="input-small")
      button(type="submit" class="btn btn-primary") Run

    form#infragrammar_mono(class="form-inline" action="javascript:void(0);")
      input#m_exp(placeholder="monochrome" type="text" class="input-small")
      button(type="submit" class="btn btn-primary") Run

    form#infragrammar_hsv(class="form-inline" action="javascript:void(0);")
      input#h_exp(placeholder="H" type="text" class="input-small")
      input#s_exp(placeholder="S" type="text" class="input-small")
      input#v_exp(placeholder="V" type="text" class="input-small")
      button(type="submit" class="btn btn-primary") Run

    div#colormaps-group
      div(class="btn-group" data-toggle="buttons-radio")
        button#grey(type="button" class="btn active") Greyscale
        button#color(type="button" class="btn") Color

    input#slider(type="text" value="100" data-slider-min="0" data-slider-max="100" data-slider-value="100")

  div.body= image.desc
  br
  h3.title= image.title
  div.meta
    span.author= " by "+(image.author || "anon")
    span.updated_at= " on "+image.updated_at

  hr 
  h4 Command log

  form.form
    label Current command
    input(type="text" value=log[log.length-1])
    label Full command log
    textarea#log.span6(rows=10)= log.join('\r')

